npm install socket.io-client
npm install socket.io-client

// server.js
const express = require('express');
const http = require('http');
const socketIO = require('socket.io');

const app = express();
const server = http.createServer(app);
const io = socketIO(server);

app.get('/', (req, res) => {
  res.send('Server is running!');
});

const adminSocket = io.of('/admin');
const userSocket = io.of('/user');

adminSocket.on('connection', (socket) => {
  console.log('Admin connected');

  socket.on('sendNotification', (data) => {
    // Broadcast the notification to all user sockets
    userSocket.emit('receiveNotification', data);
  });

  socket.on('disconnect', () => {
    console.log('Admin disconnected');
  });
});

userSocket.on('connection', (socket) => {
  console.log('User connected');

  socket.on('disconnect', () => {
    console.log('User disconnected');
  });
});

const PORT = 3001;
server.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});




// App.js
import React, { useState, useEffect } from 'react';
import io from 'socket.io-client';

const socket = io('http://localhost:3001/user'); // Replace with your server URL

const App = () => {
  const [notifications, setNotifications] = useState([]);

  useEffect(() => {
    // Listen for notifications from the server
    socket.on('receiveNotification', (data) => {
      setNotifications((prevNotifications) => [...prevNotifications, data]);
    });

    return () => {
      // Disconnect the socket when the component unmounts
      socket.disconnect();
    };
  }, []);

  const handleSendNotification = () => {
    const notificationMessage = prompt('Enter notification message:');
    // Emit the notification to the server
    socket.emit('sendNotification', notificationMessage);
  };

  return (
    <div>
      <h1>Real-time Notifications</h1>
      <button onClick={handleSendNotification}>Send Notification</button>
      <div>
        <h2>Notifications:</h2>
        <ul>
          {notifications.map((notification, index) => (
            <li key={index}>{notification}</li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default App;

nnnn
